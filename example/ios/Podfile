# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# KaleyraVideoSDK minimum deployment target is iOS 15, these instructions needs to select the maximum iOS version between KaleyraVideoSDK minimum and
# ReactNative minimum deployment targets.
min_ios_versions_supported = ['15.0', min_ios_version_supported]
index_of_max = min_ios_versions_supported.each_with_index.max_by { |number, _| number.to_f }[1]
actual_min_ios_version_supported = min_ios_versions_supported[index_of_max]

platform :ios, actual_min_ios_version_supported
prepare_react_native_project!

# use_frameworks! is required for using Bandyer framework, linkage static is required by React Native instead.

target 'KaleyraVideoReact' do
  config = use_native_modules!

  pod 'BandyerBroadcastExtension'

   pod 'Firebase', :modular_headers => true
   pod 'FirebaseCoreInternal', :modular_headers => true
   pod 'GoogleUtilities', :modular_headers => true
   pod 'FirebaseCore', :modular_headers => true

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'KaleyraVideoReactTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )

    installer.pods_project.targets.each do |target|
          target.build_configurations.each do |config|
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = actual_min_ios_version_supported

            # https://stackoverflow.com/a/77136535
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
         end
     end
  end
end

target 'BroadcastExtension' do
  pod 'BandyerBroadcastExtension'
end
